{"ast":null,"code":"import _regeneratorRuntime from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/myreads_components/BookSearchPage.js\";\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport Header from './Header';\nimport * as BooksAPI from '..App/BooksAPI';\nimport BookShelves from './myreads_components/BookShelves';\n\nvar BookSearchPage = function BookSearchPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var onInputChange = function onInputChange(e) {\n    setSearchTerm(e.target.value);\n  };\n\n  var fetchBooks =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"\".concat(Book, \"?q=\").concat(searchTerm));\n\n            case 2:\n              result = _context.sent;\n              // Books result\n              useEffect(function () {\n                BooksAPI.getAll().then(function (data) {\n                  return fetchBooks(data);\n                });\n              }, []);\n              console.log(result.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function fetchBooks() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    // Prevent browser refreshing after form submission\n    e.preventDefault(); // Call fetch books async function\n\n    fetchBooks();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Search\")))), React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"list-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"open-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: function onClick() {\n      return useState(BookSearchPage(true));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Add a book\")))));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/myreads_components/BookSearchPage.js"],"names":["axios","React","useState","useEffect","Link","Book","Header","BooksAPI","BookShelves","BookSearchPage","searchTerm","setSearchTerm","onInputChange","e","target","value","fetchBooks","get","result","getAll","then","data","console","log","onSubmitHandler","preventDefault"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport Book from './Book';\nimport Header from './Header';\nimport * as BooksAPI from '..App/BooksAPI'\nimport BookShelves from './myreads_components/BookShelves'\n\n\nconst BookSearchPage = () => {   \n    const [searchTerm, setSearchTerm] = useState('');\n    const onInputChange = (e) => {\n        setSearchTerm(e.target.value);\n    }\n        const fetchBooks = async () => {\n        // Ajax call to BooksAPI using Axios\n        const result = await axios.get(`${Book}?q=${searchTerm}`);\n        // Books result\n        useEffect(() => {\n        BooksAPI.getAll()\n            .then(data => fetchBooks(data))\n        }, [])\n        console.log(result.data);\n        }\n                    \n    const onSubmitHandler = (e) => {\n        // Prevent browser refreshing after form submission\n        e.preventDefault();\n        // Call fetch books async function\n        fetchBooks();\n    \n    }\n    return (\n        <div className=\"app\">\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <form onSubmit={onSubmitHandler}>\n                <input \n                    type=\"search\" \n                    placeholder=\"Search by title or author\"\n                    value={searchTerm}\n                    onChange={onInputChange}    \n                />\n                <button type=\"submit\">Search</button>\n                </form>\n              \n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n\n         \n         <div className=\"list-books\">\n            \n            <div className=\"open-search\">\n                <Link to='/Search'>\n                    <button onClick={() => useState(BookSearchPage(true))}>Add a book</button>\n                </Link>\n            </div>\n          </div>\n      </div>\n    )\n    \n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}
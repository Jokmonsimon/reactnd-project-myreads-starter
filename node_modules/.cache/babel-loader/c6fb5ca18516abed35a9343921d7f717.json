{"ast":null,"code":"import _regeneratorRuntime from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport BookSearchForm from '../myreads_components/BookSearchForm';\nimport Book from '../myreads_components/Book';\n\nvar BookSearchPage = function BookSearchPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var onInputChange = function onInputChange(e) {\n    setSearchTerm(e.target.value);\n\n    var fetchBooks =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"\".concat(BooksAPI, \"?q=\").concat(searchTerm));\n\n              case 2:\n                result = _context.sent;\n                // Books result\n                console.log(result.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function fetchBooks() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    var onSubmitHandler = function onSubmitHandler(e) {\n      // Prevent browser refreshing after form submission\n      e.preventDefault(); // Call fetch books async function\n\n      fetchBooks();\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Search\")))), React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"list-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"open-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add a book\")))));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js"],"names":["React","useState","axios","BookSearchForm","Book","BookSearchPage","searchTerm","setSearchTerm","onInputChange","e","target","value","fetchBooks","get","BooksAPI","result","console","log","data","onSubmitHandler","preventDefault"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACWJ,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,MAClBK,UADkB;AAAA,MACNC,aADM;;AAIzB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAO;AACzBF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;;AACA,QAAMC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEEV,KAAK,CAACW,GAAN,WAAaC,QAAb,gBAA2BR,UAA3B,EAFF;;AAAA;AAEbS,gBAAAA,MAFa;AAGnB;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB;;AAJmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVN,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAOA,QAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACV,CAAD,EAAO;AACvB;AACAA,MAAAA,CAAC,CAACW,cAAF,GAFuB,CAGvB;;AACAR,MAAAA,UAAU;AACjB,KALD;AAMH,GAfD;;AAgBA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,WAAW,EAAC,2BAFhB;AAGI,IAAA,KAAK,EAAEN,UAHX;AAII,IAAA,QAAQ,EAAEE,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA,CAVF,CADF,CADF,EAyBE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzBF,CADF,EAgCC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,CADL,CAFH,CAhCD,CADJ;AA4CH,CAhED;;AAkEA,eAAeH,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport BookSearchForm from '../myreads_components/BookSearchForm';\nimport Book from '../myreads_components/Book';\n\nconst BookSearchPage = () => {   \n    const [searchTerm, setSearchTerm] = useState('');\n    \n    \n    const onInputChange = (e) => {\n        setSearchTerm(e.target.value);\n        const fetchBooks = async () => {\n        // Ajax call to BooksAPI using Axios\n        const result = await axios.get(`${BooksAPI}?q=${searchTerm}`);\n        // Books result\n        console.log(result.data);\n        }\n                  \n        const onSubmitHandler = (e) => {\n                // Prevent browser refreshing after form submission\n                e.preventDefault();\n                // Call fetch books async function\n                fetchBooks();\n        }\n    }\n    return (\n        <div className=\"app\">\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                \n                <form >\n                <input \n                    type=\"search\" \n                    placeholder=\"Search by title or author\"\n                    value={searchTerm}\n                    onChange={onInputChange}    \n                />\n                <button type=\"submit\">Search</button>\n                </form>\n              \n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n\n         \n         <div className=\"list-books\">\n            \n            <div className=\"open-search\">\n                 <Link to='/Search'>\n                    <button>Add a book</button>\n                </Link>\n            </div>\n          </div>\n      </div>\n    )\n    \n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}
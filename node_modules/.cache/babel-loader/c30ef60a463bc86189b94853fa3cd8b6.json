{"ast":null,"code":"import _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport BookShelf from '../myreads_components/BookShelf';\nim;\n\nvar BookSearchPage = function BookSearchPage(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookSearchResults = _useState4[0],\n      setBookSearchResults = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 1),\n      closeSearch = _useState6[0];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  useEffect(function () {\n    BooksAPI.search(searchTerm).then(function (response) {\n      setBookSearchResults(response);\n    });\n  }, [searchTerm]);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serach-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/search\",\n    render: function render() {\n      return React.createElement(\"button\", {\n        className: \"close-search\",\n        onClick: closeSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Close\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: function onChange(e) {\n      return setSearchTerm(e.target.value);\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))), bookSearchResults && React.createElement(BookShelf, {\n    books: bookSearchResults,\n    bookShelfTitle: null,\n    updateBookShelf: props.updateBookShelf,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js"],"names":["React","useState","useEffect","BooksAPI","BookShelf","im","BookSearchPage","props","searchTerm","setSearchTerm","bookSearchResults","setBookSearchResults","closeSearch","errorMessage","setErrorMessage","search","then","response","e","target","value","updateBookShelf"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACAC,EAAE;;AAEF,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA,kBACIN,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACzBO,UADyB;AAAA,MACbC,aADa;;AAAA,mBAEkBR,QAAQ,CAAC,EAAD,CAF1B;AAAA;AAAA,MAEzBS,iBAFyB;AAAA,MAENC,oBAFM;;AAAA,mBAGVV,QAAQ,CAAC,IAAD,CAHE;AAAA;AAAA,MAGzBW,WAHyB;;AAAA,mBAIQX,QAAQ,CAAC,KAAD,CAJhB;AAAA;AAAA,MAIzBY,YAJyB;AAAA,MAIXC,eAJW;;AAMhCZ,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,QAAQ,CAACY,MAAT,CAAgBP,UAAhB,EAA4BQ,IAA5B,CAAiC,UAACC,QAAD,EAAc;AAC9CN,MAAAA,oBAAoB,CAACM,QAAD,CAApB;AACA,KAFD;AAGD,GAJQ,EAIN,CAACT,UAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,MAAM,EAAE;AAAA,aAC1B;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAEI,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAD0B;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAIE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,2BAA/B;AAA2D,IAAA,KAAK,EAAEJ,UAAlE;AAA8E,IAAA,QAAQ,EAAE,kBAAAU,CAAC;AAAA,aAAIT,aAAa,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAAzF;AAA4H,IAAA,SAAS,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF,EAWGV,iBAAiB,IAAI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEA,iBAAlB;AAAqC,IAAA,cAAc,EAAE,IAArD;AAA2D,IAAA,eAAe,EAAEH,KAAK,CAACc,eAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXxB,CADF;AAeD,CA3BD;;AA6BA,eAAef,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as BooksAPI from '../BooksAPI';\nimport BookShelf from '../myreads_components/BookShelf';\nim\n\nconst BookSearchPage = (props) => {   \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [bookSearchResults, setBookSearchResults] = useState([]);\n  const [closeSearch] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  useEffect(() => {\n    BooksAPI.search(searchTerm).then((response) => {\n     setBookSearchResults(response)\n    })\n  }, [searchTerm]);\n  \n  return (\n    <div className=\"app\">\n      <div className=\"serach-books\">\n        <div className=\"search-books-bar\">\n        <Route path=\"/search\" render={() => (\n            <button className=\"close-search\" onClick={closeSearch}>Close</button>\n          )} /> \n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} autoFocus/>\n          </div>\n        </div>\n      </div>\n      {bookSearchResults && <BookShelf books={bookSearchResults} bookShelfTitle={null} updateBookShelf={props.updateBookShelf}/>}\n    </div>\n  );\n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}
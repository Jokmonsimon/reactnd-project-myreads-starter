{"ast":null,"code":"import _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/App.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Header from './myreads_components/Header';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport BookShelves from './myreads_components/BookShelves';\nimport { Route } from 'react-router-dom';\n\nvar BooksApp = function BooksApp() {\n  useEffect(function () {\n    BooksAPI.getAll().then(function (data) {\n      return setBooks(data);\n    });\n  }, []);\n  /**\n   * TODO: Instead of using this state variable to keep track of which page\n   * we're on, use the URL in the browser's address bar. This will ensure that\n   * users can use the browser's back and forward buttons to navigate between\n   * pages, as well as provide a good URL they can bookmark and share.\n   */\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showSearchPage = _useState2[0],\n      setShowSearchPage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      books = _useState4[0],\n      setBooks = _useState4[1];\n\n  var updateBookShelf = function updateBookShelf(book, newBookShelf) {\n    var updatedBooks = books.map(function (b) {\n      if (b.id === book.id) {\n        book.shelf = newBookShelf;\n        return book;\n      }\n\n      return b;\n    });\n    setBooks(updatedBooks);\n    BooksAPI.update(book, newBookShelf).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return (// BookSearchPage\n    React.createElement(\"div\", {\n      className: \"app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, showSearchPage ? React.createElement(\"div\", {\n      className: \"search-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"search-books-bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"close-search\",\n      onClick: function onClick() {\n        return setShowSearchPage(false);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Close\"), React.createElement(\"div\", {\n      className: \"search-books-input-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by title or author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"search-books-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"ol\", {\n      className: \"books-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))) : // Header\n    React.createElement(\"div\", {\n      className: \"list-books\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"list-books-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(BookShelves, {\n      books: books,\n      updateBookShelf: updateBookShelf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"open-search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: function render() {\n        return React.createElement(ListContacts, {\n          contacts: _this.state.contacts,\n          onDeleteContact: _this.removeContact,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/create\",\n      render: function render(_ref) {\n        var history = _ref.history;\n        return React.createElement(CreateContact, {\n          onCreateContact: function onCreateContact(contact) {\n            _this.createContact(contact);\n\n            history.push('/');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))\n  );\n};\n\nexport default BooksApp;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/App.js"],"names":["React","useState","useEffect","Header","BooksAPI","BookShelves","Route","BooksApp","getAll","then","data","setBooks","showSearchPage","setShowSearchPage","books","updateBookShelf","book","newBookShelf","updatedBooks","map","b","id","shelf","update","console","log","state","contacts","removeContact","history","contact","createContact","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAErBL,EAAAA,SAAS,CAAC,YAAM;AACdE,IAAAA,QAAQ,CAACI,MAAT,GACGC,IADH,CACQ,UAAAC,IAAI;AAAA,aAAIC,QAAQ,CAACD,IAAD,CAAZ;AAAA,KADZ;AAED,GAHQ,EAGN,EAHM,CAAT;AAKE;;;;;;;AAPmB,kBAayBT,QAAQ,CAAC,KAAD,CAbjC;AAAA;AAAA,MAaZW,cAbY;AAAA,MAaIC,iBAbJ;;AAAA,mBAeOZ,QAAQ,CAAC,EAAD,CAff;AAAA;AAAA,MAeZa,KAfY;AAAA,MAeLH,QAfK;;AAiBnB,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,YAAP,EAAwB;AAC9C,QAAMC,YAAY,GAAGJ,KAAK,CAACK,GAAN,CAAU,UAAAC,CAAC,EAAI;AAClC,UAAIA,CAAC,CAACC,EAAF,KAASL,IAAI,CAACK,EAAlB,EAAsB;AACpBL,QAAAA,IAAI,CAACM,KAAL,GAAaL,YAAb;AACA,eAAOD,IAAP;AACD;;AACD,aAAOI,CAAP;AACD,KANoB,CAArB;AAOAT,IAAAA,QAAQ,CAACO,YAAD,CAAR;AACAd,IAAAA,QAAQ,CAACmB,MAAT,CAAgBP,IAAhB,EAAsBC,YAAtB,EAAoCR,IAApC,CAAyC,UAAAC,IAAI;AAAA,aAAIc,OAAO,CAACC,GAAR,CAAYf,IAAZ,CAAJ;AAAA,KAA7C;AACD,GAVD;;AAYA,SACE;AACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,cAAc,GACb;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,OAAO,EAAE;AAAA,eAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,2BAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAFF,CADF,EAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,CADa,GAsBd;AACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAGG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEC,KAApB;AAA2B,MAAA,eAAe,EAAEC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAHH,EAMG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CANH,CAxBH,EAyCE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,MAAM,EAAE;AAAA,eAC5B,oBAAC,YAAD;AACA,UAAA,QAAQ,EAAE,KAAI,CAACW,KAAL,CAAWC,QADrB;AAEA,UAAA,eAAe,EAAE,KAAI,CAACC,aAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD4B;AAAA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,EA+CE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE;AAAA,YAAGC,OAAH,QAAGA,OAAH;AAAA,eAElC,oBAAC,aAAD;AACE,UAAA,eAAe,EAAE,yBAACC,OAAD,EAAa;AAC5B,YAAA,KAAI,CAACC,aAAL,CAAmBD,OAAnB;;AACAD,YAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AACD,WAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFkC;AAAA,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/CF;AAFF;AA6DH,CA1FD;;AA4FA,eAAezB,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Header from './myreads_components/Header'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport BookShelves from './myreads_components/BookShelves'\nimport { Route } from 'react-router-dom'\n\nconst BooksApp = () => {\n\n  useEffect(() => {\n    BooksAPI.getAll()\n      .then(data => setBooks(data))\n  }, [])\n  \n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    const [showSearchPage, setShowSearchPage] = useState(false);\n\n    const [books, setBooks] = useState([])\n  \n    const updateBookShelf = (book, newBookShelf) => {\n      const updatedBooks = books.map(b => {\n        if (b.id === book.id) {\n          book.shelf = newBookShelf;\n          return book;\n        }\n        return b;\n      })\n      setBooks(updatedBooks)\n      BooksAPI.update(book, newBookShelf).then(data => console.log(data))\n    }\n\n    return (\n      // BookSearchPage\n      <div className=\"app\">\n        {showSearchPage ? (\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <button className=\"close-search\" onClick={() => setShowSearchPage(false)}>Close</button>\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                <input type=\"text\" placeholder=\"Search by title or author\"/>\n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n        ) : (\n         // Header\n         <div className=\"list-books\">\n            <Header />\n            \n            <div className=\"list-books-content\">\n             <BookShelves books={books} updateBookShelf={updateBookShelf}/>\n            </div>\n            <div className=\"open-search\">\n\n            <Link to='/Search'>\n            \n            </Link>\n\n              \n            </div>\n          </div>\n        )}\n\n        <Route exact path='/' render={() => (\n          <ListContacts \n          contacts={this.state.contacts} \n          onDeleteContact={this.removeContact}\n        />\n        )} />\n        <Route exact path='/create' render={({ history }) => (\n                   \n          <CreateContact\n            onCreateContact={(contact) => {\n              this.createContact(contact)\n              history.push('/')\n            }}\n            />\n        )}\n        />\n      </div>\n    )\n}\n\nexport default BooksApp\n"]},"metadata":{},"sourceType":"module"}
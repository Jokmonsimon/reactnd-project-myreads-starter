{"ast":null,"code":"import _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as BooksAPI from './BooksAPI';\nimport BookSearchForm from '../myreads_components/BookSearchForm';\nimport Book from '../myreads_components/Book';\n\nvar BookSearchPage = function BookSearchPage() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState({\n    book: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      books = _useState4[0],\n      setBooks = _useState4[1];\n\n  useEffect(function () {\n    BooksAPI.getAll().then(function (data) {\n      return setBooks(data);\n    });\n  }, []);\n\n  var onInputChange = function onInputChange(e) {\n    setSearchTerm(e.target.value);\n  };\n\n  var onSubmitHandler = function onSubmitHandler(e) {\n    e.preventDefault();\n    setBooks;\n  };\n\n  var updateBookShelf = function updateBookShelf(book, newBookShelf) {\n    var updatedBooks = books.map(function (b) {\n      if (b.id === book.id) {\n        book.shelf = newBookShelf;\n        return book;\n      }\n\n      return b;\n    });\n    setBooks(updatedBooks);\n    BooksAPI.update(book, newBookShelf).then(function (data) {\n      return console.log(data);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: onInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Search\")))), React.createElement(\"div\", {\n    className: \"search-books-results\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"ol\", {\n    className: \"books-grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"list-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"open-search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Add a book\")))));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js"],"names":["React","useState","useEffect","axios","BooksAPI","BookSearchForm","Book","BookSearchPage","searchTerm","setSearchTerm","book","books","setBooks","getAll","then","data","onInputChange","e","target","value","onSubmitHandler","preventDefault","updateBookShelf","newBookShelf","updatedBooks","map","b","id","shelf","update","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as BooksAPI from './BooksAPI';\nimport BookSearchForm from '../myreads_components/BookSearchForm';\nimport Book from '../myreads_components/Book';\n\nconst BookSearchPage = () => {   \n    const [searchTerm, setSearchTerm] = useState('');\n    const [books, setBooks] = useState({book: []});\n\n    useEffect(() => {\n      BooksAPI.getAll()\n        .then(data => setBooks(data))\n    }, [])\n\n    const onInputChange = e => {\n      setSearchTerm(e.target.value);\n    }\n\n    const onSubmitHandler = e => {\n      e.preventDefault();\n      setBooks\n    }\n    \n    const updateBookShelf = (book, newBookShelf) => {\n      const updatedBooks = books.map(b => {\n        if (b.id === book.id) {\n          book.shelf = newBookShelf;\n          return book;\n        }\n        return b;\n      })\n      setBooks(updatedBooks)\n      BooksAPI.update(book, newBookShelf).then(data => console.log(data))\n\n\n    }\n\n    return (\n        <div className=\"app\">\n          <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n              <div className=\"search-books-input-wrapper\">\n                {/*\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                  You can find these search terms here:\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                  you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                \n                <form >\n                <input \n                    type=\"search\" \n                    placeholder=\"Search by title or author\"\n                    value={searchTerm}\n                    onChange={onInputChange}    \n                />\n                <button type=\"submit\">Search</button>\n                </form>\n              \n\n              </div>\n            </div>\n            <div className=\"search-books-results\">\n              <ol className=\"books-grid\"></ol>\n            </div>\n          </div>\n\n         \n         <div className=\"list-books\">\n            \n            <div className=\"open-search\">\n                 <Link to='/Search'>\n                    <button>Add a book</button>\n                </Link>\n            </div>\n          </div>\n      </div>\n    )\n    \n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}
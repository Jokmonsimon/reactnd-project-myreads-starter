{"ast":null,"code":"var _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/myreads_components/BookSearchForm.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nvar BookSearchForm = function BookSearchForm(_ref) {\n  var onSubmitHandler = _ref.onSubmitHandler,\n      searchTerm = _ref.searchTerm,\n      onInputChange = _ref.onInputChange,\n      errorMessage = _ref.errorMessage;\n  useEffect(function () {\n    co;\n  });\n  return React.createElement(\"div\", {\n    className: \"search-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"search\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: onInputChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })))));\n};\n\nexport default BookSearchForm;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/myreads_components/BookSearchForm.js"],"names":["React","useEffect","Link","BookSearchForm","onSubmitHandler","searchTerm","onInputChange","errorMessage","co"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAgE;AAAA,MAA9DC,eAA8D,QAA9DA,eAA8D;AAAA,MAA7CC,UAA6C,QAA7CA,UAA6C;AAAA,MAAjCC,aAAiC,QAAjCA,aAAiC;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AAEnFN,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,EAAE;AACL,GAFQ,CAAT;AAIA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUA;AAAM,IAAA,QAAQ,EAAEJ,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,WAAW,EAAC,2BAAjC;AACI,IAAA,KAAK,EAAEC,UADX;AAEI,IAAA,QAAQ,EAAEC,aAFd;AAGI,IAAA,QAAQ,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVA,CADJ,CADJ,CADJ;AAwBH,CA9BD;;AAgCA,eAAeH,cAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst BookSearchForm = ({onSubmitHandler, searchTerm, onInputChange, errorMessage}) => {\n\n    useEffect(() => {\n        co\n    })\n    \n    return (\n        <div className=\"search-books\">\n            <div className=\"search-books-bar\">\n                <div className=\"search-books-input-wrapper\">\n                {/*\n                NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                You can find these search terms here:\n                https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n                However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                you don't find a specific author or title. Every search is limited by search terms.\n                */}\n                \n                <form onSubmit={onSubmitHandler}>\n                    <input type=\"search\" placeholder=\"Search by title or author\"\n                        value={searchTerm}\n                        onChange={onInputChange}\n                        required\n                    />\n                </form>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BookSearchForm;"]},"metadata":{},"sourceType":"module"}
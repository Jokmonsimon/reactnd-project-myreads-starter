{"ast":null,"code":"import _regeneratorRuntime from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nvar BookSearchPage = function BookSearchPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookSearchResults = _useState4[0],\n      setBookSearchResults = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 1),\n      showSearchPage = _useState6[0];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  function fetchBooks() {\n    return _fetchBooks.apply(this, arguments);\n  }\n\n  function _fetchBooks() {\n    _fetchBooks = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var bookSearchResults;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://reactnd-books-api.udacity.com\");\n\n            case 2:\n              bookSearchResults = _context.sent;\n              bookSearchResults.json().then(function (bookSearchResults) {\n                return setBookSearchResults(bookSearchResults);\n              }).catch(function (errorMessage) {\n                return setErrorMessage(errorMessage);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _fetchBooks.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    fetchBooks();\n    conso;\n  });\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serach-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close-search\",\n    onClick: function onClick() {\n      return showSearchPage(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: function onChange(e) {\n      return setSearchTerm(e.target.value);\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })))));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js"],"names":["React","useState","useEffect","axios","BookSearchPage","searchTerm","setSearchTerm","bookSearchResults","setBookSearchResults","showSearchPage","errorMessage","setErrorMessage","fetchBooks","fetch","json","then","catch","conso","e","target","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACSH,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACpBI,UADoB;AAAA,MACRC,aADQ;;AAAA,mBAEuBL,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEpBM,iBAFoB;AAAA,MAEDC,oBAFC;;AAAA,mBAGFP,QAAQ,CAAC,KAAD,CAHN;AAAA;AAAA,MAGpBQ,cAHoB;;AAAA,mBAIaR,QAAQ,CAAC,KAAD,CAJrB;AAAA;AAAA,MAIpBS,YAJoB;AAAA,MAINC,eAJM;;AAAA,WAMZC,UANY;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6BAM3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACkCC,KAAK,CAAC,uCAAD,CADvC;;AAAA;AACQN,cAAAA,iBADR;AAEEA,cAAAA,iBAAiB,CACdO,IADH,GAEGC,IAFH,CAEQ,UAAAR,iBAAiB;AAAA,uBAAIC,oBAAoB,CAACD,iBAAD,CAAxB;AAAA,eAFzB,EAGGS,KAHH,CAGS,UAAAN,YAAY;AAAA,uBAAIC,eAAe,CAACD,YAAD,CAAnB;AAAA,eAHrB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAN2B;AAAA;AAAA;;AAc3BR,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,UAAU;AACVK,IAAAA,KAAK;AACN,GAHQ,CAAT;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMR,cAAc,CAAC,KAAD,CAApB;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,2BAA/B;AAA2D,IAAA,KAAK,EAAEJ,UAAlE;AAA8E,IAAA,QAAQ,EAAE,kBAAAa,CAAC;AAAA,aAAIZ,aAAa,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAAzF;AAA4H,IAAA,SAAS,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF,CADF;AAYD,CA/BD;;AAiCA,eAAehB,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nconst BookSearchPage = () => {   \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [bookSearchResults, setBookSearchResults] = useState([]);\n  const [showSearchPage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  async function fetchBooks() {\n    const bookSearchResults = await fetch(\"https://reactnd-books-api.udacity.com\");\n    bookSearchResults\n      .json()\n      .then(bookSearchResults => setBookSearchResults(bookSearchResults))\n      .catch(errorMessage => setErrorMessage(errorMessage));\n  }\n\n  useEffect(() => {\n    fetchBooks();\n    conso\n  });\n\n  return (\n    <div className=\"app\">\n      <div className=\"serach-books\">\n        <div className=\"search-books-bar\">\n        <button className=\"close-search\" onClick={() => showSearchPage(false)}>Close</button>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} autoFocus/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/home/jokmon/reactnd/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as BooksAPI from '';\n\nvar BookSearchPage = function BookSearchPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      bookSearchResults = _useState4[0],\n      setBookSearchResults = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 1),\n      showSearchPage = _useState6[0];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  await BooksAPI.search(searchTerm).then(function (books) {\n    if (!books.hasOwnProperty('error')) {\n      _this.setState({\n        bookSearchResults: books,\n        errorMessage: ''\n      });\n    } else {\n      _this.setState({\n        bookSearchResults: [],\n        errorMessage: 'No book found, please try another search.'\n      });\n    }\n  });\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"serach-books\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-books-bar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"close-search\",\n    onClick: function onClick() {\n      return showSearchPage(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Close\"), React.createElement(\"div\", {\n    className: \"search-books-input-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search by title or author\",\n    value: searchTerm,\n    onChange: function onChange(e) {\n      return setSearchTerm(e.target.value);\n    },\n    autoFocus: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })))));\n};\n\nexport default BookSearchPage;","map":{"version":3,"sources":["/home/jokmon/reactnd/reactnd-project-myreads-starter/src/pages/BookSearchPage.js"],"names":["React","useState","useEffect","axios","BooksAPI","BookSearchPage","searchTerm","setSearchTerm","bookSearchResults","setBookSearchResults","showSearchPage","errorMessage","setErrorMessage","search","then","books","hasOwnProperty","setState","e","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,EAA1B;;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACSJ,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACpBK,UADoB;AAAA,MACRC,aADQ;;AAAA,mBAEuBN,QAAQ,CAAC,EAAD,CAF/B;AAAA;AAAA,MAEpBO,iBAFoB;AAAA,MAEDC,oBAFC;;AAAA,mBAGFR,QAAQ,CAAC,KAAD,CAHN;AAAA;AAAA,MAGpBS,cAHoB;;AAAA,mBAIaT,QAAQ,CAAC,KAAD,CAJrB;AAAA;AAAA,MAIpBU,YAJoB;AAAA,MAINC,eAJM;;AAO3B,QAAMR,QAAQ,CAACS,MAAT,CAAgBP,UAAhB,EAA4BQ,IAA5B,CAAiC,UAACC,KAAD,EAAW;AAChD,QAAI,CAACA,KAAK,CAACC,cAAN,CAAqB,OAArB,CAAL,EAAoC;AAClC,MAAA,KAAI,CAACC,QAAL,CAAc;AACZT,QAAAA,iBAAiB,EAAGO,KADR;AAEZJ,QAAAA,YAAY,EAAG;AAFH,OAAd;AAID,KALD,MAMK;AACH,MAAA,KAAI,CAACM,QAAL,CAAc;AACZT,QAAAA,iBAAiB,EAAG,EADR;AAEZG,QAAAA,YAAY,EAAG;AAFH,OAAd;AAID;AACF,GAbK,CAAN;AAeA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,SAAS,EAAC,cAAlB;AAAiC,IAAA,OAAO,EAAE;AAAA,aAAMD,cAAc,CAAC,KAAD,CAApB;AAAA,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,EAEE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,2BAA/B;AAA2D,IAAA,KAAK,EAAEJ,UAAlE;AAA8E,IAAA,QAAQ,EAAE,kBAAAY,CAAC;AAAA,aAAIX,aAAa,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,KAAzF;AAA4H,IAAA,SAAS,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF,CADF;AAYD,CAlCD;;AAoCA,eAAef,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as BooksAPI from ''\n\n\nconst BookSearchPage = () => {   \n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [bookSearchResults, setBookSearchResults] = useState({});\n  const [showSearchPage] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  \n  await BooksAPI.search(searchTerm).then((books) => {\n    if (!books.hasOwnProperty('error')) {\n      this.setState({\n        bookSearchResults : books,\n        errorMessage : ''\n      })\n    }\n    else {\n      this.setState({\n        bookSearchResults : [],\n        errorMessage : 'No book found, please try another search.'\n      })\n    }\n  })\n\n  return (\n    <div className=\"app\">\n      <div className=\"serach-books\">\n        <div className=\"search-books-bar\">\n        <button className=\"close-search\" onClick={() => showSearchPage(false)}>Close</button>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" value={searchTerm} onChange={e => setSearchTerm(e.target.value)} autoFocus/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BookSearchPage;"]},"metadata":{},"sourceType":"module"}